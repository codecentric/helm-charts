{{- if .Values.ingress.enabled -}}
{{- $fullName := include "mailhog.fullname" . -}}
{{- $apiV1 := false -}}
{{- $apiVersion := "extensions/v1beta1" -}}
{{- if and (.Capabilities.APIVersions.Has "networking.k8s.io/v1") (semverCompare ">= v1.19.0-0" .Capabilities.KubeVersion.Version) -}}
  {{- $apiVersion = "networking.k8s.io/v1" -}}
  {{- $apiV1 = true -}}
{{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" -}}
  {{- $apiVersion = "networking.k8s.io/v1beta1" -}}
{{- else -}}
  {{- $apiVersion = "extensions/v1beta1" -}}
{{- end }}
apiVersion: {{ $apiVersion }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "mailhog.labels" . | nindent 4 }}
  {{- with .Values.ingress.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName }}
{{- end }}
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      {{- with .secretName }}
      secretName: {{ . }}
      {{- end }}
  {{- end }}
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
        {{- range .paths }}
          - path: {{ .path }}
            {{- if $apiV1 }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: http
            {{- else }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: http
            {{- end }}
        {{- end }}
  {{- end }}
{{- end }}

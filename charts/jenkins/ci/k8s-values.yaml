persistence:
  enabled: true
  size: 10Gi
  storageClass: local-path

terminationGracePeriodSeconds: 0

serviceAccount:
  master:
    create: true

  k8s-agent:
    create: true
    name: k8s-agent

rbac:
  master:
    create: true
    rules:
      - apiGroups: [""]
        resources: ["pods"]
        verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
      - apiGroups: [""]
        resources: ["pods/exec"]
        verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
      - apiGroups: [""]
        resources: ["pods/log"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: ["get"]

  k8s-agent:
    create: true

referenceContent:
  - data:
      - fileName: plugins.txt
        fileContent: |
          configuration-as-code
          configuration-as-code-support
          workflow-aggregator
          kubernetes
          kubernetes-credentials-provider
          timestamper
          locale
          job-dsl

      - fileName: jenkins.yaml
        fileContent: |
          jenkins:
            securityRealm:
              local:
                users:
                  - id: "${ADMIN_USER}"
                    password: "${ADMIN_PASSWORD}"
            authorizationStrategy:
              loggedInUsersCanDoAnything:
                allowAnonymousRead: false
            numExecutors: 0
            remotingSecurity:
              enabled: true
            crumbIssuer:
              standard:
                excludeClientIPFromCrumb: false
            clouds:
              - kubernetes:
                  name: kubernetes
                  serverUrl: https://kubernetes.default
                  namespace: {{ .Release.Namespace }}
                  jenkinsUrl: http://{{ include "jenkins.fullname" . }}-master:{{ .Values.service.master.port }}
                  jenkinsTunnel: {{ include "jenkins.fullname" . }}-agent:{{ .Values.service.agent.port }}
                  templates:
                    - name: k8s-agent
                      idleMinutes: 30
                      namespace: {{ .Release.Namespace }}
                      nodeUsageMode: NORMAL
                      serviceAccount: k8s-agent
                      containers:
                        - name: jnlp
                          image: jenkinsci/jnlp-slave:3.27-1
                          ttyEnabled: true
          security:
            remotingCLI:
              enabled: false
          unclassified:
            timestamperConfig:
              systemTimeFormat: "'<b>'yyyy-MM-dd HH:mm:ss.SSS'</b> '"
              elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
          jobs:
            - script: |
                freeStyleJob('test-job') {
                    steps {
                        shell 'echo "Hello from a CasC-created job!"'
                    }
                }

  - relativeDir: init.groovy.d
    data:
      - fileName: init.groovy
        fileContent: |
          import hudson.plugins.locale.PluginImpl
          import jenkins.model.Jenkins
          import net.sf.json.JSONObject

          println 'Running custom Groovy init script...'

          def jenkins = Jenkins.get()

          println 'Disabling localizatzion...'
          def localePlugin = jenkins.getPlugin(PluginImpl)
          JSONObject json = new JSONObject()
          json.put('systemLocale', 'en_US')
          json.put('ignoreAcceptLanguage', true)
          localePlugin.configure(null, json)
          localePlugin.save()

          println 'Disabling usage statistics...'
          jenkins.setNoUsageStatistics(true)

          println 'Saving changes...'
          jenkins.save()

casc:
  secrets:
    ADMIN_USER: admin
    ADMIN_PASSWORD: secret

k8sCredentials:
  - nameSuffix: test
    type: usernamePassword
    description: Some username
    data:
      username: foo
      password: secret
  - nameSuffix: text
    type: secretText
    description: Some username
    data:
      text: |
        ds sdfsd dsfds fsdfdsfs dsf dsf
        sdf fdsf dsf fdsfsfsdf sf sd
        sdf fsf dsfsf sdfs fsdf f

extraInitContainers: |
  - name: jenkins-extra-init
    image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
    imagePullPolicy: {{ .Values.image.pullPolicy }}
    command:
      - "sh"
    args:
      - "-c"
      - "echo 'Hello from extra init container!'"

test:
  enabled: true
